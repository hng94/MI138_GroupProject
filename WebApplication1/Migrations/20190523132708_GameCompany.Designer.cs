// <auto-generated />
using System;
using GameCompany.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GameCompany.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20190523132708_GameCompany")]
    partial class GameCompany
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GameCompany.Models.GameCompany", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("Developer");

                    b.Property<string>("Name");

                    b.Property<bool>("Published");

                    b.Property<string>("ScreenshotUrl");

                    b.HasKey("ID");

                    b.ToTable("Game_company");
                });

            modelBuilder.Entity("GameCompany.Models.Tag", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameCompanyID");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.HasIndex("GameCompanyID");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("GameCompany.Models.Tag", b =>
                {
                    b.HasOne("GameCompany.Models.GameCompany")
                        .WithMany("Tag")
                        .HasForeignKey("GameCompanyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
